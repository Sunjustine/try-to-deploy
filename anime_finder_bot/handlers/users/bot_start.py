from aiogram import types
from loader import dp

from filters import isPrivate
from aiogram.dispatcher.filters import CommandStart
from utils.db_api import quick_commands as commands
from aiogram.types import InputFile
from keyboards.inline.default_inline_keyboard import inline_menu


@dp.message_handler(isPrivate(), CommandStart())
async def command_start(message: types.Message):
    args = message.get_args()  # /start 13980380
    print(args)
    new_args = await commands.check_args(args, message.from_user.id)
    print(new_args)

    try:
        user = await commands.select_user(message.from_user.id)
        if user.status == 'active':
            photo = InputFile("D:\\rootPython\\anime_finder_bot\\media\\pictures\\main\\hjlihjuh.jpg")

            await dp.bot.send_photo(chat_id=message.from_user.id,
                                    photo=photo,
                                    caption=f"–í—ñ—Ç–∞—é {message.from_user.first_name}! üëã –¢–∏ –∑–∞–≤—ñ—Ç–∞–≤(–ª–∞) –¥–æ —á–∞—Ç-–±–æ—Ç–∞ "
                                            f"AnimeFinderBot. " +
                                            f"–Ø –¥–æ–ø–æ–º–∂—É –∑–Ω–∞–π—Ç–∏ —Ç–æ–±—ñ —Ü—ñ–∫–∞–≤—ñ –∞–Ω—ñ–º–µ üïµÔ∏è‚Äç —Ç–∞ –∑–±–µ—Ä–µ–≥—Ç–∏ —ó—Ö —É –±—ñ–±–ª—ñ–æ—Ç–µ–∫—É, "
                                            f"—è–∫—â–æ –±—É–¥–µ –±–∞–∂–∞–Ω–Ω—è –ø–µ—Ä–µ–¥–∏–≤–∏—Ç–∏—Å—è –∑–∞ —á–∞—à–∫–æ—é –≥–∞—Ä—è—á–æ–≥–æ —à–æ–∫–æ–ª–∞–¥—É ‚òï. " +
                                            f"–ó–∞—Ä–∞–∑ —Ç—É—Ç –¥—É–∂–µ –æ–±–º–µ–∂–µ–Ω–∏–π –∫–∞—Ç–∞–ª–æ–≥ –∞–Ω—ñ–º–µ, –∞–ª–µ –º–∏ –≤–∏–ø—Ä–∞–≤–∏–º–æ —Ü–µ –ø—ñ–∑–Ω—ñ—à–µ ü§ó.",
                                    reply_markup=inline_menu)
        elif user.status == 'baned':
            await message.answer('–í–∏ –∑–∞–±–∞–Ω–µ–Ω—ñ, –ø–æ–≤–æ–¥—å—Ç–µ —Å–µ–±–µ –∫—Ä–∞—â–µ')
    except Exception:
        await commands.add_user(user_id=message.from_user.id,
                                first_name=message.from_user.first_name,
                                second_name=message.from_user.last_name,
                                username=message.from_user.username,
                                status='active',
                                phone_number=0)
        # try:
        #     await dp.bot.send_message(chat_id=int(new_args),
        #                               text=f'–ü–æ —Ç–æ–≤—î–º—É –ø–æ—Å–∏–ª–∞–Ω–Ω—é –∑–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞–≤—Å—è {message.from_user.first_name}')
        # except Exception:
        #     pass


@dp.message_handler(isPrivate(), text='/ban')
async def get_ban(message: types.message):
    await commands.update_status(user_id=message.from_user.id, status='baned')
    await message.answer('–í–∏ –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω—ñ')


@dp.message_handler(isPrivate(), text='/unban')
async def get_unban(message: types.message):
    await commands.update_status(user_id=message.from_user.id, status='active')
    await message.answer('–í—ñ—Ç–∞—é, –≤–∏ —Ä–æ–∑–±–ª–æ–∫–æ–≤–∞–Ω—ñ')


@dp.message_handler(isPrivate(), text='/profile')
async def profile(message: types.message):
    user = await commands.select_user(message.from_user.id)
    await message.answer(f'–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ —é–∑–µ—Ä–∞:\n'
                         f'user_id - {user.user_id},\n'
                         f'first_name - {user.first_name},\n'
                         f'second_name - {user.second_name},\n'
                         f'username - {user.username},\n'
                         f'status - {user.status}')
